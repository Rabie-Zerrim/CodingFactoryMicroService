import { Component, OnInit } from '@angular/core';
import { AssessmentService } from '../services/assessment.service';
import { Assessment } from '../models/assessment.model';
import { Router } from '@angular/router';

@Component({
  selector: 'app-add-assessment',
  templateUrl: './assessment-add.component.html',
})
export class AddAssessmentComponent implements OnInit {
  assessment: Assessment = {
      idAssessment: 0, // This will be auto-generated by the backend
      feedback: '',
      acceptanceStatus: 'Pending', // Default to 'Pending'
      adminAcceptance: false, // Default value
      partnerAacceptance: false, // Default value
      partnershipId: 90,
      score: 0
  };
  partnerships: any[] = []; // This will hold the list of partnerships
  errorMessage: string = '';

  constructor(private assessmentService: AssessmentService, private router: Router) {}

  ngOnInit(): void {
    this.loadPartnerships();
  }

  loadPartnerships(): void {
    this.assessmentService.getAllPartnerships().subscribe(
      (partnerships) => {
        this.partnerships = partnerships;
      },
      (error) => {
        this.errorMessage = `Error loading partnerships: ${error.message}`;
      }
    );
  }

  createAssessment(): void {
    // Set partnershipId to 90 manually
    this.assessment.partnershipId = 90;
  
    if (!this.assessment.partnershipId) {
      this.errorMessage = 'Please select a valid partnership.';
      return;
    }
  
    // Log the assessment object to check what is being sent
    console.log('Assessment object being sent:', this.assessment);
  
    const newAssessment: Assessment = {
      idAssessment: 0, // Auto-generated by backend
      acceptanceStatus: 'Pending', // Default value
      adminAcceptance: false, // Default value
      partnerAacceptance: false, // Default value
      score: this.assessment.score, // Ensure score is provided
      feedback: this.assessment.feedback, // Feedback from form
      partnershipId: this.assessment.partnershipId, // Use hardcoded partnershipId
    };
  
    this.assessmentService.createAssessment(newAssessment).subscribe(
      (response) => {
        console.log('Assessment created successfully:', response);
        this.router.navigate(['/assessment-list']); // Navigate to the assessment list page after success
      },
      (error) => {
        console.error('Error creating assessment:', error);
        this.errorMessage = 'There was an error creating the assessment. Please try again.';
      }
    );
  }
  
}
